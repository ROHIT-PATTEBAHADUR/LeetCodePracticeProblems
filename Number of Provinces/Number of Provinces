class Solution {
    public int findCircleNum(int[][] isConnected) {
        int n = isConnected.length;
        List<Integer>[] adj = new ArrayList[n];
        for(int i = 0; i < n; i++){
            adj[i] = new ArrayList<>();
        }
        for( int i =0; i < n; i++){
            for(int j = 0;j<n;j++){
                if(isConnected[i][j]==1){
                    adj[i].add(j);
                    adj[j].add(i);
                }
            }
        }
        int [] vis = new int[n];
        int res = 0;
        for(int i =0;i<n;i++){
            if(vis[i]==0){
                res++;
                dfs(i,adj,vis);
            }
        }
        return res;
    }
    static void dfs(int node, List<Integer>[] adj, int []vis){
        vis[node] =1;
        for(int nei:adj[node]){
            if(vis[nei]==0){
                dfs(nei,adj,vis);
            }
        }
    }
}
